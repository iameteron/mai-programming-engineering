{
    "openapi": "3.1.0",
    "info": {
        "title": "FastAPI",
        "version": "0.1.0"
    },
    "paths": {
        "/api/v1/account/token": {
            "post": {
                "tags": [
                    "account"
                ],
                "summary": "Login",
                "operationId": "login_api_v1_account_token_post",
                "requestBody": {
                    "content": {
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/Body_login_api_v1_account_token_post"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TokenModel"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Login failed",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "detail": {
                                            "type": "string",
                                            "title": "Error info"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Refresh token failed",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "detail": {
                                            "type": "string",
                                            "title": "Error info"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/account/refresh": {
            "post": {
                "tags": [
                    "account"
                ],
                "summary": "Refresh",
                "operationId": "refresh_api_v1_account_refresh_post",
                "requestBody": {
                    "content": {
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/Body_refresh_api_v1_account_refresh_post"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TokenModel"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Refresh token failed",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "detail": {
                                            "type": "string",
                                            "title": "Error info"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Refresh token failed",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "detail": {
                                            "type": "string",
                                            "title": "Error info"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/account/logout": {
            "post": {
                "tags": [
                    "account"
                ],
                "summary": "Logout",
                "operationId": "logout_api_v1_account_logout_post",
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Invalid access token",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "detail": {
                                            "type": "string",
                                            "title": "Error info"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Refresh token failed",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "detail": {
                                            "type": "string",
                                            "title": "Error info"
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "OAuth2PasswordBearer": []
                    }
                ]
            }
        },
        "/api/v1/user/{user_id}": {
            "get": {
                "tags": [
                    "user"
                ],
                "summary": "Get User",
                "operationId": "get_user_api_v1_user__user_id__get",
                "security": [
                    {
                        "OAuth2PasswordBearer": []
                    }
                ],
                "parameters": [
                    {
                        "name": "user_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid4",
                            "title": "User Id"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UserModel"
                                }
                            }
                        }
                    },
                    "401": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "detail": {
                                            "title": "Error info",
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        },
                        "description": "Invalid access token"
                    },
                    "403": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "detail": {
                                            "title": "Error info",
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        },
                        "description": "Access to resource denied"
                    },
                    "500": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "detail": {
                                            "title": "Error info",
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        },
                        "description": "Refresh token failed"
                    },
                    "404": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "detail": {
                                            "title": "Error info",
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        },
                        "description": "User not found"
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "user"
                ],
                "summary": "Update User",
                "operationId": "update_user_api_v1_user__user_id__put",
                "security": [
                    {
                        "OAuth2PasswordBearer": []
                    }
                ],
                "parameters": [
                    {
                        "name": "user_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid4",
                            "title": "User Id"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateUserModel"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UserModel"
                                }
                            }
                        }
                    },
                    "401": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "detail": {
                                            "title": "Error info",
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        },
                        "description": "Invalid access token"
                    },
                    "403": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "detail": {
                                            "title": "Error info",
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        },
                        "description": "Access to resource denied"
                    },
                    "500": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "detail": {
                                            "title": "Error info",
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        },
                        "description": "Refresh token failed"
                    },
                    "404": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "detail": {
                                            "title": "Error info",
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        },
                        "description": "User not found"
                    },
                    "409": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "detail": {
                                            "title": "Error info",
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        },
                        "description": "User already exists"
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "user"
                ],
                "summary": "Delete User",
                "operationId": "delete_user_api_v1_user__user_id__delete",
                "security": [
                    {
                        "OAuth2PasswordBearer": []
                    }
                ],
                "parameters": [
                    {
                        "name": "user_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid4",
                            "title": "User Id"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "detail": {
                                            "title": "Error info",
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        },
                        "description": "Invalid access token"
                    },
                    "403": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "detail": {
                                            "title": "Error info",
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        },
                        "description": "Access to resource denied"
                    },
                    "500": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "detail": {
                                            "title": "Error info",
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        },
                        "description": "Refresh token failed"
                    },
                    "404": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "detail": {
                                            "title": "Error info",
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        },
                        "description": "User not found"
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/user/find_user": {
            "get": {
                "tags": [
                    "user"
                ],
                "summary": "Get User By Username",
                "operationId": "get_user_by_username_api_v1_user_find_user_get",
                "security": [
                    {
                        "OAuth2PasswordBearer": []
                    }
                ],
                "parameters": [
                    {
                        "name": "username",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "title": "Username"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UserModel"
                                }
                            }
                        }
                    },
                    "401": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "detail": {
                                            "title": "Error info",
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        },
                        "description": "Invalid access token"
                    },
                    "403": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "detail": {
                                            "title": "Error info",
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        },
                        "description": "Access to resource denied"
                    },
                    "500": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "detail": {
                                            "title": "Error info",
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        },
                        "description": "Refresh token failed"
                    },
                    "404": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "detail": {
                                            "title": "Error info",
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        },
                        "description": "User not found"
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/user/search_users": {
            "post": {
                "tags": [
                    "user"
                ],
                "summary": "Search Users By First Name Last Name",
                "operationId": "search_users_by_first_name_last_name_api_v1_user_search_users_post",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Body_search_users_by_first_name_last_name_api_v1_user_search_users_post"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "items": {
                                        "$ref": "#/components/schemas/BriefUserModel"
                                    },
                                    "type": "array",
                                    "title": "Response Search Users By First Name Last Name Api V1 User Search Users Post"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Invalid access token",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "detail": {
                                            "type": "string",
                                            "title": "Error info"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Access to resource denied",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "detail": {
                                            "type": "string",
                                            "title": "Error info"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Refresh token failed",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "detail": {
                                            "type": "string",
                                            "title": "Error info"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "OAuth2PasswordBearer": []
                    }
                ]
            }
        },
        "/api/v1/user/": {
            "post": {
                "tags": [
                    "user"
                ],
                "summary": "Create User",
                "operationId": "create_user_api_v1_user__post",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CreateUserModel"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UserModel"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Invalid access token",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "detail": {
                                            "type": "string",
                                            "title": "Error info"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Access to resource denied",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "detail": {
                                            "type": "string",
                                            "title": "Error info"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Refresh token failed",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "detail": {
                                            "type": "string",
                                            "title": "Error info"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "User already exists",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "detail": {
                                            "type": "string",
                                            "title": "Error info"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "201": {
                        "description": "User successfully created",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UserModel"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "OAuth2PasswordBearer": []
                    }
                ]
            }
        },
        "/api/v1/user/reactivate": {
            "post": {
                "tags": [
                    "user"
                ],
                "summary": "Activate User",
                "operationId": "activate_user_api_v1_user_reactivate_post",
                "security": [
                    {
                        "OAuth2PasswordBearer": []
                    }
                ],
                "parameters": [
                    {
                        "name": "user_id",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid4",
                            "title": "User Id"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "detail": {
                                            "title": "Error info",
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        },
                        "description": "Invalid access token"
                    },
                    "403": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "detail": {
                                            "title": "Error info",
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        },
                        "description": "Access to resource denied"
                    },
                    "500": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "detail": {
                                            "title": "Error info",
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        },
                        "description": "Refresh token failed"
                    },
                    "404": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "detail": {
                                            "title": "Error info",
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        },
                        "description": "User not found"
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        }
    },
    "components": {
        "schemas": {
            "Body_login_api_v1_account_token_post": {
                "properties": {
                    "grant_type": {
                        "anyOf": [
                            {
                                "type": "string",
                                "pattern": "^password$"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Grant Type"
                    },
                    "username": {
                        "type": "string",
                        "title": "Username"
                    },
                    "password": {
                        "type": "string",
                        "title": "Password"
                    },
                    "scope": {
                        "type": "string",
                        "title": "Scope",
                        "default": ""
                    },
                    "client_id": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Client Id"
                    },
                    "client_secret": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Client Secret"
                    }
                },
                "type": "object",
                "required": [
                    "username",
                    "password"
                ],
                "title": "Body_login_api_v1_account_token_post"
            },
            "Body_refresh_api_v1_account_refresh_post": {
                "properties": {
                    "refresh_token": {
                        "type": "string",
                        "title": "Refresh Token"
                    },
                    "grant_type": {
                        "type": "string",
                        "title": "Grant Type"
                    }
                },
                "type": "object",
                "required": [
                    "refresh_token",
                    "grant_type"
                ],
                "title": "Body_refresh_api_v1_account_refresh_post"
            },
            "Body_search_users_by_first_name_last_name_api_v1_user_search_users_post": {
                "properties": {
                    "first_name": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "First Name"
                    },
                    "second_name": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Second Name"
                    },
                    "page": {
                        "type": "integer",
                        "title": "Page"
                    }
                },
                "type": "object",
                "required": [
                    "page"
                ],
                "title": "Body_search_users_by_first_name_last_name_api_v1_user_search_users_post"
            },
            "BriefUserModel": {
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uuid4",
                        "title": "Id"
                    },
                    "username": {
                        "type": "string",
                        "title": "Username"
                    },
                    "first_name": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "First Name"
                    },
                    "second_name": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Second Name"
                    }
                },
                "type": "object",
                "required": [
                    "id",
                    "username"
                ],
                "title": "BriefUserModel"
            },
            "CreateUserModel": {
                "properties": {
                    "username": {
                        "type": "string",
                        "title": "Username"
                    },
                    "password": {
                        "type": "string",
                        "title": "Password"
                    },
                    "first_name": {
                        "type": "string",
                        "title": "First Name"
                    },
                    "second_name": {
                        "type": "string",
                        "title": "Second Name"
                    },
                    "groups_ids": {
                        "items": {
                            "type": "string",
                            "format": "uuid4"
                        },
                        "type": "array",
                        "title": "Groups Ids"
                    },
                    "patronymic": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Patronymic"
                    },
                    "birth": {
                        "anyOf": [
                            {
                                "type": "string",
                                "format": "date-time"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Birth"
                    },
                    "email": {
                        "anyOf": [
                            {
                                "type": "string",
                                "format": "email"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Email"
                    },
                    "phone": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Phone"
                    }
                },
                "type": "object",
                "required": [
                    "username",
                    "password",
                    "first_name",
                    "second_name",
                    "groups_ids"
                ],
                "title": "CreateUserModel"
            },
            "GroupModel": {
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uuid4",
                        "title": "Id"
                    },
                    "name": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Name"
                    }
                },
                "type": "object",
                "required": [
                    "id"
                ],
                "title": "GroupModel"
            },
            "HTTPValidationError": {
                "properties": {
                    "detail": {
                        "items": {
                            "$ref": "#/components/schemas/ValidationError"
                        },
                        "type": "array",
                        "title": "Detail"
                    }
                },
                "type": "object",
                "title": "HTTPValidationError"
            },
            "TokenModel": {
                "properties": {
                    "access_token": {
                        "type": "string",
                        "title": "Access Token"
                    },
                    "refresh_token": {
                        "type": "string",
                        "title": "Refresh Token"
                    },
                    "token_type": {
                        "type": "string",
                        "title": "Token Type",
                        "default": "bearer"
                    }
                },
                "type": "object",
                "required": [
                    "access_token",
                    "refresh_token"
                ],
                "title": "TokenModel"
            },
            "UpdateUserModel": {
                "properties": {
                    "username": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Username"
                    },
                    "password": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Password"
                    },
                    "first_name": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "First Name"
                    },
                    "second_name": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Second Name"
                    },
                    "patronymic": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Patronymic"
                    },
                    "email": {
                        "anyOf": [
                            {
                                "type": "string",
                                "format": "email"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Email"
                    },
                    "phone": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Phone"
                    },
                    "birth": {
                        "anyOf": [
                            {
                                "type": "string",
                                "format": "date-time"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Birth"
                    },
                    "groups": {
                        "anyOf": [
                            {
                                "items": {
                                    "$ref": "#/components/schemas/GroupModel"
                                },
                                "type": "array"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Groups"
                    }
                },
                "type": "object",
                "title": "UpdateUserModel"
            },
            "UserModel": {
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uuid4",
                        "title": "Id"
                    },
                    "username": {
                        "type": "string",
                        "title": "Username"
                    },
                    "first_name": {
                        "type": "string",
                        "title": "First Name"
                    },
                    "second_name": {
                        "type": "string",
                        "title": "Second Name"
                    },
                    "patronymic": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Patronymic"
                    },
                    "birth": {
                        "anyOf": [
                            {
                                "type": "string",
                                "format": "date-time"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Birth"
                    },
                    "email": {
                        "anyOf": [
                            {
                                "type": "string",
                                "format": "email"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Email"
                    },
                    "phone": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Phone"
                    },
                    "groups": {
                        "items": {
                            "$ref": "#/components/schemas/GroupModel"
                        },
                        "type": "array",
                        "title": "Groups"
                    }
                },
                "type": "object",
                "required": [
                    "id",
                    "username",
                    "first_name",
                    "second_name",
                    "groups"
                ],
                "title": "UserModel"
            },
            "ValidationError": {
                "properties": {
                    "loc": {
                        "items": {
                            "anyOf": [
                                {
                                    "type": "string"
                                },
                                {
                                    "type": "integer"
                                }
                            ]
                        },
                        "type": "array",
                        "title": "Location"
                    },
                    "msg": {
                        "type": "string",
                        "title": "Message"
                    },
                    "type": {
                        "type": "string",
                        "title": "Error Type"
                    }
                },
                "type": "object",
                "required": [
                    "loc",
                    "msg",
                    "type"
                ],
                "title": "ValidationError"
            }
        },
        "securitySchemes": {
            "OAuth2PasswordBearer": {
                "type": "oauth2",
                "flows": {
                    "password": {
                        "scopes": {},
                        "tokenUrl": "/api/v1/account/token"
                    }
                }
            }
        }
    },
    "tags": [
        {
            "name": "users",
            "description": "Get and update information about all users"
        },
        {
            "name": "account",
            "description": "Login, get tokens and manage self account information"
        }
    ]
}